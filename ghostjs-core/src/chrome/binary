#!/usr/bin/env node

const shell = require('shelljs')
const spawn = require('child_process').spawn
const fs = require('fs')
const getChromeFlags = require('../utils').getChromeFlags

const getPath = () => {
	if (process.platform === 'darwin') {
	  return '/Applications/Google\ Chrome\ Canary.app/Contents/MacOS/Google\ Chrome\ Canary'
  } else {
	  return shell.exec('which google-chrome').stdout
  }
}

const chromePath = process.env.CHROME_BIN || getPath()

var isFirst = true
var stderr = ''

const program = spawn(
  chromePath,
  getChromeFlags().concat(['--remote-debugging-port=9222', '--disable-popup-blocking']),
  { cwd: process.cwd(),  env: process.env }
)

program.stdout.pipe(process.stdout)
program.stderr.pipe(process.stderr)
process.stdin.pipe(program.stdin)

program.on('error', function (err) {
  console.error('Error executing Chrome at', chromePath)
  console.error(err.stack)
})

program.on('exit', function(code){
  // Wait few ms for error to be printed.
  setTimeout(function(){
    process.exit(code)
  }, 20)
})

process.on('SIGTERM', function() {
  cp.kill('SIGTERM')
  process.exit(1)
})
